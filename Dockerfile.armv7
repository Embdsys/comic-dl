# cross build it (it takes a few hours on x86_64), or be prepared to wait an eternity
# build with command:
# docker build -f Dockerfile.armv7 -t comic-dl:py3.8-buster-armv7 --platform linux/arm/v7 .
# export with command
# docker save -o comic-dl.tar comic-dl:py3.8-buster-armv7
# import on arm machine with command:
# docker load --input comic-dl.tar
# run with alias:
# alias comic_dl="docker run -it --rm -v $(pwd):/directory -w /directory comic-dl:py3.8-buster-armv7 comic_dl -dd /directory"

FROM python:3.8-slim-buster AS builder
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get -yq upgrade \
	&& apt-get install -yq \
    build-essential \
    chrpath \
    git \
    libssl-dev \
    libfreetype6 \
    libfreetype6-dev \
    libfontconfig1 \
    libfontconfig1-dev \
	libjpeg-dev \
	libqpdf-dev \
    libxft-dev \
	libxml2-dev \
	libxslt1-dev \
	python3-wheel \
	zlib1g-dev

## qpdf and pikepdf need to be built from source on armv7
RUN python -m pip install --upgrade pip \
 && pip install pybind11 \
 && cd /opt \
 && git clone https://github.com/qpdf/qpdf.git \
 && git clone https://github.com/pikepdf/pikepdf.git \
 && cd /opt/qpdf \
 && ./configure \
 && make \
 && make install \
 && cd /opt/pikepdf \
 && pip install .

ENV OWNER_UID=1000
ENV OWNER_GID=1000

COPY / /opt/comic-dl
RUN python -m pip install -r /opt/comic-dl/requirements.txt && \
    chmod +x /opt/comic-dl/docker-init.sh && \
    ln -s /opt/comic-dl/docker-init.sh /usr/local/bin/comic_dl && \
    addgroup --gid ${OWNER_GID} comic-dl && \
    adduser --disabled-password -home /home/comic-dl --gid ${OWNER_GID} --uid ${OWNER_UID} --gecos "" comic-dl

USER comic-dl